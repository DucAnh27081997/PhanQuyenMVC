@model AppEnglishTest.Areas.administrator.Models.DataModel.Account

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/adminstrator/Views/Shared/AdminView.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Account</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IPpublic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IPpublic, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IPpublic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3 col-xs-3">
            @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
            <button id="btnChooseImage">Choose image</button>

        </div>

        <div class="col-md-3 col-xs-3">
            <img src="#" id="IMG" class="img img-thumbnail" />
        </div>
    </div>
    

    <div class="form-group">
        <div class="row">
            <div class="col-md-3 col-xs-3">
                @Html.LabelFor(model => model.isAdmin, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.isAdmin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.isAdmin, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3 col-xs-3">
                @Html.LabelFor(model => model.Allowed, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Allowed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Allowed, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3 col-xs-3">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Checked, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Checked, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Checked, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#btnChooseImage").on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction= function (url) {
                $("#Avatar").val(url);
                var link = url.toString();
                $("#IMG").attr("src",link);
            };
            finder.popup();
        });
        
    });
</script>

<script>
    $(document).ready(function () {
        
            $.ajax({
                url: "http://ip-api.com/json/42.113.193.113", success: function (result) {
                    //var string =
                    //    "<b>query:</b>" + result.query +
                    //    "\n<b>status:</b>" + result.status +
                    //    "\n<b>country:</b>" + result.country +
                    //    "\n<b>countryCode:</b>" + result.countryCode +
                    //    "\n<b>region:</b>" + result.region +
                    //    "\n<b>regionName:</b>" + result.regionName +
                    //    "\n<b>city:</b>" + result.city +
                    //    "\n<b>zip:</b>" + result.zip +
                    //    "\n<b>lat:</b>" + result.lat +
                    //    "\n<b>lon:</b>" + result.lon +
                    //    "\n<b>timezone:</b>" + result.timezone +
                    //    "\n<b>isp:</b>" + result.isp +
                    //    "\n<b>org:</b>" + result.org +
                    //    "\n<b>as:</b>" + result.as;

                    //toastr.info(string);
                    $("#IPpublic").val(result.query);
                }
            });

        
    });
</script>